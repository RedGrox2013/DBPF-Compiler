using DBPF_Compiler.FileTypes;
using DBPF_Compiler.FNV;

namespace DBPF_Compiler.DBPF
{
    public class DBPFPackerHelper
    {
        public string? ProjectFolderPath { get; set; }
        public string? ProjectName { get; set; }

        private LocalizationTable? _localizationTable;
        public LocalizationTable LocalizationTable
            => _localizationTable ??= new LocalizationTable();

        private string? _localeTableID;
        public string? LocalizationTableID
        {
            get
            {
                if (_localizationTable == null)
                    return null;

                if (string.IsNullOrWhiteSpace(_localeTableID))
                {
                    if (!string.IsNullOrWhiteSpace(ProjectName))
                        _localeTableID = ProjectName + "__autogenerated";
                    else
                    {
                        uint tableID;
                        _random ??= new Random();
                        tableID = (uint)_random.NextInt64(1000, (long)uint.MaxValue);
                        _localeTableID = FNVHash.ToString(tableID);
                    }
                }
                
                return _localeTableID;
            }
            set
            {
                _localeTableID = value;
                _localeTableID ??= new LocalizationTable();
            }
        }

        private Random? _random;

        internal void WriteHelperData(DatabasePackedFile dbpf)
        {
            if (_localizationTable == null)
                return;

            string strTableID = LocalizationTableID;
            if (!FNVHash.TryParse(strTableID, out var tableID))
                tableID = FNVHash.Compute(strTableID);

            dbpf.WriteSporeFile(_localizationTable,
                new(tableID, (uint)TypeIDs.locale, (uint)GroupIDs.locale));
        }
    }
}
