using DBPF_Compiler.DBPF;
using DBPF_Compiler.FNV;
using System.Text;

namespace DBPF_Compiler.ModsTemplates
{
    public class ModTemplateHelper(string projectFolderPath)
    {
        public string ProjectFolderPath { get; set; } = projectFolderPath;
        public string? ProjectName { get; set; }
        public List<string> Strings { get; set; } = [];

        private Random? _random;

        public void WriteHelperData(DatabasePackedFile dbpf)
        {
            if (Strings.Count == 0)
                return;

            uint unique;
            if (string.IsNullOrWhiteSpace(ProjectName))
            {
                _random ??= new Random();
                do
                {
                    unique = (uint)_random.Next();
                } while (unique <= 1000);
            }
            else
                unique = FNVHash.Compute(ProjectName + "__autogenerated");

            StringBuilder locale = new(
                "# Autogenerated by Database Packed File Compiler\n# https://github.com/RedGrox2013/DBPF-Compiler\n\n");
            for (int i = 0; i < Strings.Count; i++)
            {
                locale.Append(FNVHash.ToString((uint)i));
                locale.Append(' ');
                locale.AppendLine(Strings[i].Replace("\n", "~br~"));
            }

            dbpf.WriteData(Encoding.Unicode.GetBytes(locale.ToString()),
                new(unique, (uint)TypeIDs.locale, (uint)GroupIDs.locale));
        }
    }
}
